apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-scripts
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: opensearch-dashboards
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  readiness-probe-script.sh: |-
    #!/usr/bin/env bash

    # fail should be called as a last resort to help the user to understand why the probe failed
    function fail {
    timestamp=$(date --iso-8601=seconds)
    echo "{\"timestamp\": \"${timestamp}\", \"message\": \"readiness probe failed\", "$1"}" | tee /proc/1/fd/2 2> /dev/null
    exit 1
    }

    READINESS_PROBE_TIMEOUT=${READINESS_PROBE_TIMEOUT:=3}

    BASIC_AUTH="-u ${OPENSEARCH_USERNAME}:${OPENSEARCH_PASSWORD}"

    # Check if we are using IPv6
    if [[ $POD_IP =~ .*:.* ]]; then
    LOOPBACK="[::1]"
    else
    LOOPBACK=127.0.0.1
    fi

    # request Opensearch on /
    # we are turning globbing off to allow for unescaped [] in case of IPv6
    ENDPOINT="${READINESS_PROBE_PROTOCOL:-https}://${LOOPBACK}:5601/api/status"
    status=$(curl -o /dev/null -w "%{http_code}" --max-time ${READINESS_PROBE_TIMEOUT} -XGET -g -s -k ${BASIC_AUTH} $ENDPOINT)
    curl_rc=$?

    if [[ ${curl_rc} -ne 0 ]]; then
    fail "\"curl_rc\": \"${curl_rc}\""
    fi

    # ready if status code 200
    if [[ ${status} == "200" ]] || [[ ${status} == "401" ]]; then
    exit 0
    else
    fail " \"status\": \"${status}\" "
    fi
